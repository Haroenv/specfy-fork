name: Main
on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize]

jobs:
  ci:
    container: node:18.13.0
    runs-on: ubuntu-latest
    services:
      postgres:
        env:
          POSTGRES_PASSWORD: postgres
        image: postgres:15.1-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: "postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable"

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            pkgs/app/package-lock.json
            pkgs/api/package-lock.json
            pkgs/website/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Migrate
        run: cd pkgs/api/ && npm run migrate

      - name: Run Test API
        run: cd pkgs/api/ && npm run test

      - name: Run Test APP
        run: cd pkgs/app/ && npm run test

      - name: Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./pkgs/api/coverage/cobertura-coverage.xml,./pkgs/app/coverage/cobertura-coverage.xml

      - name: Build API
        run: cd pkgs/api/ && npm run build

      - name: Build APP
        run: cd pkgs/app/ && npm run build
